// const line = new Line('line -p [300, 50] [600, 600] -c rgb(255, 0, 0)');
// line.render();
// line.draw();
// const rectangle = new Rectangle('rectangle -p [50, 50] [100, 100] -c rgb(0, 255, 0) -b rgba(255, 0, 0, 0.3)');
// rectangle.render();
// rectangle.draw();
// const triangle = new Triangle('triangle -p [50, 300] [50, 100] [300, 100] -c rgb(0, 0, 255) -b rgba(255, 0, 0, 0.3)');
// triangle.render();
// triangle.draw();
// const cirle = new Circle('circle -p [75, 75] -r 25 -c rgba(255, 0, 0, 0.8) -b rgba(255, 0, 0, 0.3)');
// cirle.render();
// cirle.draw();
// const ellipse = new Ellipse('ellipse -p [75, 75] -r1 50 -r2 25 -c rgb(0, 255, 0) -b rgba(255, 0, 0, 0.3)');
// ellipse.render();
// ellipse.draw();
// const form = new Form();
// form.render();

// const state = new State();
// state.add('line -p [300, 50] [600, 600] -c rgb(255, 0, 0)');
// state.add('rectangle -p [50, 50] [100, 100] -c rgb(0, 255, 0) -b rgba(255, 0, 0, 0.3)');
// state.add('triangle -p [50, 300] [50, 100] [300, 100] -c rgb (0, 0, 255) -b rgba (255, 0, 0, 0.3)');
// state.add('circle -p [400, 400] -r 25 -c rgba (255, 0, 0, 0.8) -b rgba(255, 0, 0, 0.3)');
// state.add('ellipse -p [500, 500] -r1 50 -r2 25 -c rgb(0, 255, 0) -b rgba(255, 0, 0, 0.3)');

// const canvas = new Canvas()
// canvas.render();
// canvas.draw(state.figures[0]);
// canvas.draw(state.figures[1]);
// canvas.draw(state.figures[2]);
// canvas.draw(state.figures[3]);
// canvas.draw(state.figures[4]);


line -p [300, 50] [600, 600] -c rgb(255, 0, 0)
rectangle -p [50, 50] [100, 100] -c rgb(0, 255, 0) -b rgba(255, 0, 0, 0.3)
triangle -p [50, 300] [50, 100] [300, 100] -c rgb(0, 0, 255) -b rgba(255, 0, 0, 0.3)
circle -p [75, 75] -r 25 -c rgba(255, 0, 0, 0.8) -b rgba(255, 0, 0, 0.3)
ellipse -p [75, 75] -r1 50 -r2 25 -c rgb(0, 255, 0) -b rgba(255, 0, 0, 0.3)

line -p [300, 50] [600, 600] -c rgb(255, 0, 0)
rectangle -p [50, 50] [100, 100] -c rgb(0, 255, 0) -b #999999
triangle -p [50, 300] [50, 100] [300, 100] -c rgb(0, 0, 255) -b rgba(255, 0, 0, 0.3)
circle -p [75, 75] -r 25 -c rgba(255, 0, 0, 0.8) -b rgb(255, 0, 0)
ellipse -p [75, 75] -r1 50 -r2 25 -c rgb(0, 255, 0) -b rgba(255, 0, 0, 1) -dashed